# Wast code compiled from Rust source, loads address into memory and put it in Storage
---
rustStorageStore:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: ''
      nonce: '0'
      storage: {}
    b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: |
        (module
        (type $t0 (func (param i32 i32)))
        (type $t1 (func))
        (import "ethereum" "storageStore" (func $ethereum.storageStore (type $t0)))
        (func $main (export "main") (type $t1)
        (local $l0 i32)
        (i32.store offset=4
        (i32.const 0)
        (tee_local $l0
        (i32.sub
        (i32.load offset=4
        (i32.const 0))
        (i32.const 64))))
        (i64.store align=4
        (get_local $l0)
        (i64.const -4516211680749895925))
        (i64.store offset=8 align=4
        (get_local $l0)
        (i64.const -223511212390185321))
        (i64.store offset=16 align=4
        (get_local $l0)
        (i64.const 2840548212))
        (i64.store offset=24 align=4
        (get_local $l0)
        (i64.const 0))
        (i64.store align=4
        (i32.add
        (get_local $l0)
        (i32.const 56))
        (i64.const 0))
        (i64.store align=4
        (i32.add
        (get_local $l0)
        (i32.const 48))
        (i64.const 0))
        (i64.store align=4
        (i32.add
        (get_local $l0)
        (i32.const 40))
        (i64.const 0))
        (i64.store offset=32 align=4
        (get_local $l0)
        (i64.const 0))
        (call $ethereum.storageStore
        (i32.add
        (get_local $l0)
        (i32.const 32))
        (get_local $l0))
        (i32.store offset=4
        (i32.const 0)
        (i32.add
        (get_local $l0)
        (i32.const 64))))
        (table $T0 0 anyfunc)
        (memory $memory (export "memory") 17)
        (data (i32.const 4) "\10\00\10\00"))
        


      nonce: ''
      storage: {}
  expect:
    - indexes:
        data: !!int -1
        gas: !!int -1
        value: !!int -1
      network:
        - ALL
      result:
        # InitialBalance - sstore - txcost 
        # 100000000000   - 20000  - 21000  = 
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          balance: '99999959000'
        b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          storage: {
            0: '0x0bbf6e7e673153c197862a8ebcede5fc74534fa9000000000000000000000000' # harcoded in rust
          }
  transaction:
    data:
    - ''
    gasLimit:
    - '0x5000001'
    gasPrice: '0x01'
    nonce: '0x00'
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: 'b94f5374fce5edbc8e2a8697c15331677e6ebf0b'
    value:
    - '0'
