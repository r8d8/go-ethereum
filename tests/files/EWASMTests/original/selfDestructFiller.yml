# Basic EWASM interface test for selDestruct
---
selfDestruct:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: ''
      nonce: '0'
      storage: {}
    b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '0'
      code: |
        (module
          (import "ethereum" "selfDestruct" (func $selfDestruct (param i32)))
          (import "ethereum" "getCaller"    (func $getCaller    (param i32)))
          (memory 1)
          (export "main" (func $main))
          (export "memory" (memory 0))
          (func $main
            (call $getCaller (i32.const 32))
            (call $selfDestruct (i32.const 32))))
      nonce: ''
      storage: {}
  expect:
    - indexes:
        data: !!int -1
        gas: !!int -1
        value: !!int -1
      network:
        - ALL
      result:
        b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          shouldnotexist: "1"
        # InitialBalance + destructedBalance - CALLER - SELFDESTRUCT - TXCOST + gasRefund 
        # 100000000000   + 0                 - 2      - 5000         - 21000  + 13001     = 99999986999
        # if refund (24000) is greater than the half of used gas, then it will only
        # refunt half the gas used.          
        a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          balance: '99999986999'
          code: ''
          storage: {}
  transaction:
    data:
    - ''
    gasLimit:
    - '0x500000' 
    gasPrice: '0x01'
    nonce: '0x00'
    secretKey: '45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8'
    to: 'b94f5374fce5edbc8e2a8697c15331677e6ebf0b'
    value:
    - '0'
  
